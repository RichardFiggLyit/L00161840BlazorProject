@page "/login"

@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject NotificationService NotifactionService

@using L00161840BlazorProject.Client.Auth

<h3>Login</h3>

<EditForm Model="userInfo" OnValidSubmit="CreateUser">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputPassword class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

</EditForm>

@code {
    private UserInfo userInfo = new UserInfo();


    private async Task CreateUser()
    {
        try
        {
            var userToken = await accountsRepository.Login(userInfo);
            await loginService.Login(userToken);
            NotificationMessage notificationMessage = new NotificationMessage() { Detail = "Succesful login", Severity = NotificationSeverity.Success, Duration = 4000, Summary = "Welcome!" };
            NotifactionService.Notify(notificationMessage);
            navigationManager.NavigateTo("");

        }
        catch (Exception ex)
        {
            NotificationMessage notificationMessage = new NotificationMessage() { Detail = ex.Message, Severity = NotificationSeverity.Error, Duration = 4000, Summary = "Error" };
            NotifactionService.Notify(notificationMessage);

        }

    }
}
