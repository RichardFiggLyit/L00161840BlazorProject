@inject DialogService DialogService

<RadzenTemplateForm TItem="AnnualLeaveRequest" Data="@model" Submit=@OnSubmit>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="Start" />
        </div>
        <div class="col">
            <RadzenDatePicker @bind-Value="@model.StartDate" Name="Start" ShowTime="false" DateFormat="dd/MM/yyyy" />
            <RadzenRequiredValidator Text="Start is required" Component="Start" />
        </div>
    </div>
    <div class="row" style="margin-bottom: 16px">
        <div class="col-md-3">
            <RadzenLabel Text="End" />
        </div>
        <div class="col">
            <RadzenDatePicker Name="End" @bind-Value="@model.EndDate" ShowTime="false" DateFormat="dd/MM/yyyy" />
            <RadzenRequiredValidator Component="End" Text="End is required" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3"></div>
        <div class="col">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
        </div>
    </div>
</RadzenTemplateForm>
@code {
    [Parameter]
    public DateTime Start { get; set; }

    [Parameter]
    public DateTime End { get; set; }

    AnnualLeaveRequest model = new AnnualLeaveRequest();

    protected override void OnParametersSet()
    {
        Start = Start.GetStartOfDay();
        End = End.GetEndOfDay();
        model.StartDate = Start;
        model.EndDate = End;
    }

    void OnSubmit(AnnualLeaveRequest model)
    {
        model.StartDate = model.StartDate.GetStartOfDay();
        model.EndDate = model.EndDate.GetEndOfDay();
        DialogService.Close(model);
    }
}